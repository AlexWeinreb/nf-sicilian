/*
 * -------------------------------------------------
 *  Nextflow config file for running tests
 * -------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 *   nextflow run nf-core/sicilian -profile test,<docker/singularity>
 */

params {
  config_profile_name = 'Test profile'
  config_profile_description = 'Minimal test dataset to check pipeline function'

  max_cpus = 2
  max_memory = 6.GB
  max_time = 48.h
  outdir = 's3://salzman-lab/nf-sicilian-outputs/aws-maca-small-chr19'
  // Input data
  // TODO nf-core: Specify the paths to your test data on nf-core/test-datasets
  // TODO nf-core: Give any required params for the test so that command line flags are not needed
  single_end = true
  input = false
  skip_umitools = true
  input_paths = [
    ['MACA_24m_M_BLADDER_58', [
      // It's weird that it's only one read and it says R2, but for 10x/droplet-based single cell, R1 is the 
      // barcode read and R2 is the "interesting" read that will actually align to the genome
      'https://github.com/czbiohub/test-datasets/raw/olgabot/sicilian/testdata/MACA_24m_M_BLADDER_58_mm10_chr19_R2.fastq.gz', 
      ]],
    ['MACA_24m_M_BLADDER_59', [
      'https://github.com/czbiohub/test-datasets/raw/olgabot/sicilian/testdata/MACA_24m_M_BLADDER_59_mm10_chr19_R2.fastq.gz', 
      ]],
  ]
  star_index = 's3://salzman-lab/nf-sicilian-outputs/aws-maca-small-chr19/genome/index/star/'
  fasta = 'https://github.com/czbiohub/test-datasets/raw/olgabot/sicilian/reference/mm10_chrom19.fa'
  gtf = 'https://github.com/czbiohub/test-datasets/raw/olgabot/sicilian/reference/GCF_000001635.26_GRCm38.p6_genomic.chr19.gtf.gz'
  sicilian_class_input_paths = [
    ['MACA_24m_M_BLADDER_58', ['glm_subscript_out_of_bounds/MACA_24m_M_BLADDER_58__class_input.tsv']],
    ['MACA_24m_M_BLADDER_59', ['glm_subscript_out_of_bounds/MACA_24m_M_BLADDER_59__class_input.tsv']],
  ]
  star_bam_paths = [
    ['MACA_24m_M_BLADDER_58', ['s3://salzman-lab/nf-sicilian-outputs/aws-maca-small-chr19/star/MACA_24m_M_BLADDER_58.Aligned.out.bam']],
    ['MACA_24m_M_BLADDER_59', ['s3://salzman-lab/nf-sicilian-outputs/aws-maca-small-chr19/star/MACA_24m_M_BLADDER_59.Aligned.out.bam']],
  ]
  star_sj_out_tab_paths = [
    ['MACA_24m_M_BLADDER_58', ['glm_subscript_out_of_bounds/MACA_24m_M_BLADDER_58.SJ.out.tab']],
  ]
  star_reads_per_gene_paths = [
    ['MACA_24m_M_BLADDER_58', ['glm_subscript_out_of_bounds/MACA_24m_M_BLADDER_58.ReadsPerGene.out.tab']],
  ]
  star_chimeric_junction_paths = [
    ['MACA_24m_M_BLADDER_58', ['glm_subscript_out_of_bounds/MACA_24m_M_BLADDER_58.Chimeric.out.junction']],
  ]
  sicilian_glm_output_paths = [
    ['MACA_24m_M_BLADDER_58', ['s3://salzman-lab/nf-sicilian-outputs/aws-maca-small-chr19/sicilian/glm/MACA_24m_M_BLADDER_58__GLM_output.txt']],
  ]
  domain = 's3://salzman-lab/hg38_ref_files/domain_file.txt'
  save_reference = true
  stranded = true
  tenx = true
  annotator = 'https://github.com/czbiohub/test-datasets/raw/olgabot/sicilian/reference/sicilian/GCF_000001635_gene_names.pkl'
  exon_bounds = 'https://github.com/czbiohub/test-datasets/raw/olgabot/sicilian/reference/sicilian/GCF_000001635_exon_bounds.pkl'
  splices = 'https://github.com/czbiohub/test-datasets/raw/olgabot/sicilian/reference/sicilian/GCF_000001635_splices.pkl'
  // Ignore `--input` as otherwise the parameter validation will throw an error
  schema_ignore_params = 'genomes,input_paths,input,sicilian_glm_output_paths,sicilian_class_input_paths,star_chimeric_junction_paths,star_reads_per_gene_paths,star_sj_out_tab_paths,star_bam_paths'

  // AWS params
  // job_queue = "TowerForge-32pmXwKfAgvOyBacurFhwX"
}


// process {
//     executor = 'awsbatch'
//     queue = 'default-971039e0-830c-11e9-9e0b-02c5b84a8036'
//     errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
// }
